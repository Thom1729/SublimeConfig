[
    {
        "keys": [
            "primary+q"
        ], 
        "command": "exit"
    }, 
    {
        "keys": [
            "primary+shift+o"
        ], 
        "command": "prompt_open_folder"
    }, 
    {
        "keys": [
            "super+shift+e"
        ], 
        "command": "reveal_in_file_manager"
    }, 
    {
        "keys": [
            "alt+shift+e"
        ], 
        "command": "reveal_in_sidebar"
    }, 
    {
        "keys": [
            "f5"
        ], 
        "args": {
            "commands": [
                [
                    "status_message", 
                    {
                        "message": "Refreshing folders."
                    }
                ], 
                [
                    "refresh_folder_list", 
                    null
                ]
            ]
        }, 
        "command": "chain"
    }, 
    {
        "keys": [
            "ctrl+m"
        ], 
        "command": "clone_file"
    }, 
    {
        "keys": [
            "ctrl+pageup"
        ], 
        "command": "prev_view"
    }, 
    {
        "keys": [
            "ctrl+pagedown"
        ], 
        "command": "next_view"
    }, 
    {
        "keys": [
            "ctrl+space"
        ], 
        "command": "auto_complete"
    }, 
    {
        "keys": [
            "primary+v"
        ], 
        "command": "paste_and_indent"
    }, 
    {
        "keys": [
            "primary+alt+v"
        ], 
        "command": "paste"
    }, 
    {
        "keys": [
            "primary+shift+v"
        ], 
        "command": "paste_from_history"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": false, 
                "key": "selection_empty"
            }
        ], 
        "keys": [
            "ctrl+alt+i"
        ], 
        "command": "increment"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": true, 
                "key": "selection_empty", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "(^|\\s)$", 
                "key": "preceding_text", 
                "match_all": true
            }
        ], 
        "keys": [
            "ctrl+backspace"
        ], 
        "args": {
            "direction": "left"
        }, 
        "command": "delete_whitespace"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": true, 
                "key": "selection_empty", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "^(\\s|$)", 
                "key": "following_text", 
                "match_all": true
            }
        ], 
        "keys": [
            "ctrl+delete"
        ], 
        "args": {
            "direction": "right"
        }, 
        "command": "delete_whitespace"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": true, 
                "key": "in_brackets", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "\\S$", 
                "key": "preceding_text", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "^\\S", 
                "key": "following_text", 
                "match_all": true
            }
        ], 
        "keys": [
            "enter"
        ], 
        "args": {
            "contents": "\n\t${0:$SELECTION}\n"
        }, 
        "command": "insert_snippet"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": true, 
                "key": "in_brackets", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "\\S$", 
                "key": "preceding_text", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "^\\S", 
                "key": "following_text", 
                "match_all": true
            }
        ], 
        "keys": [
            " "
        ], 
        "args": {
            "contents": " ${0:$SELECTION} "
        }, 
        "command": "insert_snippet"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": true, 
                "key": "in_brackets", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "\\S", 
                "key": "preceding_text", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "^", 
                "key": "following_text", 
                "match_all": true
            }
        ], 
        "keys": [
            "backspace"
        ], 
        "args": {
            "file": "res://Packages/Default/Delete Left Right.sublime-macro"
        }, 
        "command": "run_macro_file"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": true, 
                "key": "in_brackets", 
                "match_all": true
            }
        ], 
        "keys": [
            "ctrl+backspace"
        ], 
        "args": {
            "direction": "both"
        }, 
        "command": "delete_whitespace"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": false, 
                "key": "selection_empty"
            }
        ], 
        "keys": [
            "ctrl+left"
        ], 
        "args": {
            "commands": [
                [
                    "move", 
                    {
                        "by": "stops", 
                        "word_end": true, 
                        "forward": false
                    }
                ], 
                [
                    "expand_selection", 
                    {
                        "to": "word"
                    }
                ]
            ]
        }, 
        "command": "chain"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": false, 
                "key": "selection_empty"
            }
        ], 
        "keys": [
            "ctrl+right"
        ], 
        "args": {
            "commands": [
                [
                    "move", 
                    {
                        "by": "stops", 
                        "word_begin": true, 
                        "forward": true
                    }
                ], 
                [
                    "expand_selection", 
                    {
                        "to": "word"
                    }
                ]
            ]
        }, 
        "command": "chain"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": false, 
                "key": "selection_empty"
            }
        ], 
        "keys": [
            "ctrl+shift+k"
        ], 
        "command": "transform_words"
    }, 
    {
        "keys": [
            "ctrl+f7"
        ], 
        "command": "better_expand_selection_to_scope"
    }, 
    {
        "context": [
            {
                "operator": "equal", 
                "operand": "source.js, source.cfml.script", 
                "key": "selector", 
                "match_all": true
            }, 
            {
                "operator": "equal", 
                "operand": false, 
                "key": "selection_empty", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "function\\s*([\\w$]+\\s*)?\\([^)]*\\)\\s*[{]$", 
                "key": "preceding_text", 
                "match_all": true
            }, 
            {
                "operator": "regex_contains", 
                "operand": "^\\}$", 
                "key": "following_text", 
                "match_all": true
            }
        ], 
        "keys": [
            "tab"
        ], 
        "args": {
            "contents": " return $0; "
        }, 
        "command": "insert_snippet"
    }
]